//HintName: DiscriminatedUnionGenerator.g.cs
// <auto-generated/>
#nullable enable

namespace Funcky.DiscriminatedUnion.Playground
{
    partial record Result<T> where T : notnull
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        internal abstract TResult Match<TResult>(global::System.Func<Ok, TResult> ok, global::System.Func<Error, TResult> error);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        internal abstract void Switch(global::System.Action<Ok> ok, global::System.Action<Error> error);
        
        partial record Ok
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            internal override TResult Match<TResult>(global::System.Func<Ok, TResult> ok, global::System.Func<Error, TResult> error) => ok(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            internal override void Switch(global::System.Action<Ok> ok, global::System.Action<Error> error) => ok(this);
        }
        
        partial record Error
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            internal override TResult Match<TResult>(global::System.Func<Ok, TResult> ok, global::System.Func<Error, TResult> error) => error(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            internal override void Switch(global::System.Action<Ok> ok, global::System.Action<Error> error) => error(this);
        }
    }
}

namespace Funcky.DiscriminatedUnion.Playground
{
    partial record Bool
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract TResult Match<TResult>(global::System.Func<True, TResult> @true, global::System.Func<False, TResult> @false);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract void Switch(global::System.Action<True> @true, global::System.Action<False> @false);
        
        partial record True
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<True, TResult> @true, global::System.Func<False, TResult> @false) => @true(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<True> @true, global::System.Action<False> @false) => @true(this);
        }
        
        partial record False
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<True, TResult> @true, global::System.Func<False, TResult> @false) => @false(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<True> @true, global::System.Action<False> @false) => @false(this);
        }
    }
}

namespace Funcky.DiscriminatedUnion.Playground
{
    partial record SyntaxNode
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Literal, TResult> literal);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract void Switch(global::System.Action<Keyword> keyword, global::System.Action<Literal> literal);
        
        partial record Keyword
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Literal, TResult> literal) => keyword(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<Keyword> keyword, global::System.Action<Literal> literal) => keyword(this);
        }
        
        partial record Literal
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Literal, TResult> literal) => literal(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<Keyword> keyword, global::System.Action<Literal> literal) => literal(this);
        }
    }
}

namespace Funcky.DiscriminatedUnion.Playground
{
    partial record SyntaxNode
    {
        partial record Literal
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public abstract TResult Match<TResult>(global::System.Func<Integer, TResult> integer, global::System.Func<String, TResult> @string);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public abstract void Switch(global::System.Action<Integer> integer, global::System.Action<String> @string);
            
            partial record Integer
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                public override TResult Match<TResult>(global::System.Func<Integer, TResult> integer, global::System.Func<String, TResult> @string) => integer(this);
                
                [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                public override void Switch(global::System.Action<Integer> integer, global::System.Action<String> @string) => integer(this);
            }
            
            partial record String
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                public override TResult Match<TResult>(global::System.Func<Integer, TResult> integer, global::System.Func<String, TResult> @string) => @string(this);
                
                [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                public override void Switch(global::System.Action<Integer> integer, global::System.Action<String> @string) => @string(this);
            }
        }
    }
}

namespace Funcky.DiscriminatedUnion.Playground
{
    partial record SyntaxNodeFlattened
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Literal.Number.Integer, TResult> integer);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract void Switch(global::System.Action<Keyword> keyword, global::System.Action<Literal.Number.Integer> integer);
        
        partial record Keyword
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Literal.Number.Integer, TResult> integer) => keyword(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<Keyword> keyword, global::System.Action<Literal.Number.Integer> integer) => keyword(this);
        }
        
        partial record Literal
        {
            partial record Number
            {
                partial record Integer
                {
                    [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                    public override TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Literal.Number.Integer, TResult> integer) => integer(this);
                    
                    [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                    public override void Switch(global::System.Action<Keyword> keyword, global::System.Action<Literal.Number.Integer> integer) => integer(this);
                }
            }
        }
    }
}

namespace Funcky.DiscriminatedUnion.Playground
{
    partial record SyntaxNodeFlattened2
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Integer, TResult> integer);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract void Switch(global::System.Action<Keyword> keyword, global::System.Action<Integer> integer);
        
        partial record Keyword
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Integer, TResult> integer) => keyword(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<Keyword> keyword, global::System.Action<Integer> integer) => keyword(this);
        }
        
        partial record Integer
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<Keyword, TResult> keyword, global::System.Func<Integer, TResult> integer) => integer(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<Keyword> keyword, global::System.Action<Integer> integer) => integer(this);
        }
    }
}

partial record EmptyUnion
{
    [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
    public abstract TResult Match<TResult>();
    
    [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
    public abstract void Switch();
}

partial interface IInterface
{
    partial record class RecordClass
    {
        partial record Record
        {
            partial class Class
            {
                partial class StaticClass
                {
                    partial record NestedUnion
                    {
                        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                        public abstract TResult Match<TResult>(global::System.Func<Variant, TResult> variant);
                        
                        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                        public abstract void Switch(global::System.Action<Variant> variant);
                        
                        partial record Variant
                        {
                            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                            public override TResult Match<TResult>(global::System.Func<Variant, TResult> variant) => variant(this);
                            
                            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
                            public override void Switch(global::System.Action<Variant> variant) => variant(this);
                        }
                    }
                }
            }
        }
    }
}

partial record UnionWithConflictingGenericType<TResult>
{
    [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
    public abstract TMatchResult Match<TMatchResult>(global::System.Func<Variant, TMatchResult> variant);
    
    [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
    public abstract void Switch(global::System.Action<Variant> variant);
    
    partial record Variant
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public override TMatchResult Match<TMatchResult>(global::System.Func<Variant, TMatchResult> variant) => variant(this);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public override void Switch(global::System.Action<Variant> variant) => variant(this);
    }
}

namespace Foo.Bar
{
    partial record NestedUnion
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract TResult Match<TResult>(global::System.Func<Variant, TResult> variant);
        
        [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
        public abstract void Switch(global::System.Action<Variant> variant);
        
        partial record Variant
        {
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override TResult Match<TResult>(global::System.Func<Variant, TResult> variant) => variant(this);
            
            [global::System.CodeDom.Compiler.GeneratedCode("Funcky.DiscriminatedUnion.SourceGeneration", "0.1.0.0")]
            public override void Switch(global::System.Action<Variant> variant) => variant(this);
        }
    }
}
